{"strategy_base64":"AfsI2gAAbVFvtuInUbkrZZbAkovBVp/h3p7qoQsPrus/zhWYzhQAAAAAAAEAAAAU7+gpU2iGIf2bDqhhB4yNnWcVSYUu7YDsvV1dPO9ThQADC2NvbnRhY3RJbmZvFgUSBHR5cGUSBm9iamVjdBIHaW5kaWNlcxUCFgMSBG5hbWUSEW93bmVySWRLZXlJbmRleGVzEgpwcm9wZXJ0aWVzFQMWARIIJG93bmVySWQSA2FzYxYBEhZyb290RW5jcnlwdGlvbktleUluZGV4EgNhc2MWARIcZGVyaXZhdGlvbkVuY3J5cHRpb25LZXlJbmRleBIDYXNjEgZ1bmlxdWUTARYCEgRuYW1lEg1vd25lcl91cGRhdGVkEgpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgokdXBkYXRlZEF0EgNhc2MSCnByb3BlcnRpZXMWBBILZW5jVG9Vc2VySWQWBRIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwIgEghtYXhJdGVtcwIgEghwb3NpdGlvbgIAEhZyb290RW5jcnlwdGlvbktleUluZGV4FgISBHR5cGUSB2ludGVnZXISCHBvc2l0aW9uAgESHGRlcml2YXRpb25FbmNyeXB0aW9uS2V5SW5kZXgWAhIEdHlwZRIHaW50ZWdlchIIcG9zaXRpb24CAhILcHJpdmF0ZURhdGEWBhIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwIwEghtYXhJdGVtcwL7CAASCHBvc2l0aW9uAgMSC2Rlc2NyaXB0aW9uElxUaGlzIGlzIHRoZSBlbmNyeXB0ZWQgdmFsdWVzIG9mIGFsaWFzTmFtZSArIG5vdGUgKyBkaXNwbGF5SGlkZGVuIGVuY29kZWQgYXMgYW4gYXJyYXkgaW4gY2JvchIIcmVxdWlyZWQVBhIKJGNyZWF0ZWRBdBIKJHVwZGF0ZWRBdBILZW5jVG9Vc2VySWQSC3ByaXZhdGVEYXRhEhZyb290RW5jcnlwdGlvbktleUluZGV4EhxkZXJpdmF0aW9uRW5jcnlwdGlvbktleUluZGV4EhRhZGRpdGlvbmFsUHJvcGVydGllcxMADmNvbnRhY3RSZXF1ZXN0FgcSJHJlcXVpcmVzSWRlbnRpdHlFbmNyeXB0aW9uQm91bmRlZEtleQICEiRyZXF1aXJlc0lkZW50aXR5RGVjcnlwdGlvbkJvdW5kZWRLZXkCAhIEdHlwZRIGb2JqZWN0EgdpbmRpY2VzFQQWAxIEbmFtZRIOb3duZXJfdXNlcl9yZWYSCnByb3BlcnRpZXMVAxYBEggkb3duZXJJZBIDYXNjFgESCHRvVXNlcklkEgNhc2MWARIQYWNjb3VudFJlZmVyZW5jZRIDYXNjEgZ1bmlxdWUTARYCEgRuYW1lEhBvd25lcklkX3RvVXNlcklkEgpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgh0b1VzZXJJZBIDYXNjFgISBG5hbWUSE3RvVXNlcklkXyRjcmVhdGVkQXQSCnByb3BlcnRpZXMVAhYBEgh0b1VzZXJJZBIDYXNjFgESCiRjcmVhdGVkQXQSA2FzYxYCEgRuYW1lEhMkb3duZXJJZF8kY3JlYXRlZEF0Egpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgokY3JlYXRlZEF0EgNhc2MSCnByb3BlcnRpZXMWBhIIdG9Vc2VySWQWBRIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwIgEghtYXhJdGVtcwIgEghwb3NpdGlvbgIAEhJlbmNyeXB0ZWRQdWJsaWNLZXkWBRIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwJgEghtYXhJdGVtcwJgEghwb3NpdGlvbgIBEg5zZW5kZXJLZXlJbmRleBYCEgR0eXBlEgdpbnRlZ2VyEghwb3NpdGlvbgICEhFyZWNpcGllbnRLZXlJbmRleBYCEgR0eXBlEgdpbnRlZ2VyEghwb3NpdGlvbgIDEhBhY2NvdW50UmVmZXJlbmNlFgISBHR5cGUSB2ludGVnZXISCHBvc2l0aW9uAgQSFWVuY3J5cHRlZEFjY291bnRMYWJlbBYFEgR0eXBlEgVhcnJheRIJYnl0ZUFycmF5EwESCG1pbkl0ZW1zAjASCG1heEl0ZW1zAlASCHBvc2l0aW9uAgUSCHJlcXVpcmVkFQYSCiRjcmVhdGVkQXQSCHRvVXNlcklkEhJlbmNyeXB0ZWRQdWJsaWNLZXkSDnNlbmRlcktleUluZGV4EhFyZWNpcGllbnRLZXlJbmRleBIQYWNjb3VudFJlZmVyZW5jZRIUYWRkaXRpb25hbFByb3BlcnRpZXMTAAdwcm9maWxlFgUSBHR5cGUSBm9iamVjdBIHaW5kaWNlcxUCFgMSBG5hbWUSB293bmVySWQSCnByb3BlcnRpZXMVARYBEggkb3duZXJJZBIDYXNjEgZ1bmlxdWUTARYCEgRuYW1lEhBvd25lcklkVXBkYXRlZEF0Egpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgokdXBkYXRlZEF0EgNhc2MSCnByb3BlcnRpZXMWAxIJYXZhdGFyVXJsFgQSBHR5cGUSBnN0cmluZxIGZm9ybWF0EgN1cmkSCW1heExlbmd0aAL7CAASCHBvc2l0aW9uAgASDXB1YmxpY01lc3NhZ2UWAxIEdHlwZRIGc3RyaW5nEgltYXhMZW5ndGgCjBIIcG9zaXRpb24CARILZGlzcGxheU5hbWUWAxIEdHlwZRIGc3RyaW5nEgltYXhMZW5ndGgCGRIIcG9zaXRpb24CAhIIcmVxdWlyZWQVAhIKJGNyZWF0ZWRBdBIKJHVwZGF0ZWRBdBIUYWRkaXRpb25hbFByb3BlcnRpZXMTAAIAAfsI+fsI6wD7COcAbVFvtuInUbkrZZbAkovBVp/h3p7qoQsPrus/zhWYzhQAAAAAAAEAAAAU7+gpU2iGIf2bDqhhB4yNnWcVSYUu7YDsvV1dPO9ThQADC2NvbnRhY3RJbmZvFgUSBHR5cGUSBm9iamVjdBIHaW5kaWNlcxUCFgMSBG5hbWUSEW93bmVySWRLZXlJbmRleGVzEgpwcm9wZXJ0aWVzFQMWARIIJG93bmVySWQSA2FzYxYBEhZyb290RW5jcnlwdGlvbktleUluZGV4EgNhc2MWARIcZGVyaXZhdGlvbkVuY3J5cHRpb25LZXlJbmRleBIDYXNjEgZ1bmlxdWUTARYCEgRuYW1lEg1vd25lcl91cGRhdGVkEgpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgokdXBkYXRlZEF0EgNhc2MSCnByb3BlcnRpZXMWBBILZW5jVG9Vc2VySWQWBRIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwIgEghtYXhJdGVtcwIgEghwb3NpdGlvbgIAEhZyb290RW5jcnlwdGlvbktleUluZGV4FgISBHR5cGUSB2ludGVnZXISCHBvc2l0aW9uAgESHGRlcml2YXRpb25FbmNyeXB0aW9uS2V5SW5kZXgWAhIEdHlwZRIHaW50ZWdlchIIcG9zaXRpb24CAhILcHJpdmF0ZURhdGEWBhIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwIwEghtYXhJdGVtcwL7CAASCHBvc2l0aW9uAgMSC2Rlc2NyaXB0aW9uElxUaGlzIGlzIHRoZSBlbmNyeXB0ZWQgdmFsdWVzIG9mIGFsaWFzTmFtZSArIG5vdGUgKyBkaXNwbGF5SGlkZGVuIGVuY29kZWQgYXMgYW4gYXJyYXkgaW4gY2JvchIIcmVxdWlyZWQVBhIKJGNyZWF0ZWRBdBIKJHVwZGF0ZWRBdBILZW5jVG9Vc2VySWQSC3ByaXZhdGVEYXRhEhZyb290RW5jcnlwdGlvbktleUluZGV4EhxkZXJpdmF0aW9uRW5jcnlwdGlvbktleUluZGV4EhRhZGRpdGlvbmFsUHJvcGVydGllcxMADmNvbnRhY3RSZXF1ZXN0FgcSJHJlcXVpcmVzSWRlbnRpdHlFbmNyeXB0aW9uQm91bmRlZEtleQICEiRyZXF1aXJlc0lkZW50aXR5RGVjcnlwdGlvbkJvdW5kZWRLZXkCAhIEdHlwZRIGb2JqZWN0EgdpbmRpY2VzFQQWAxIEbmFtZRIOb3duZXJfdXNlcl9yZWYSCnByb3BlcnRpZXMVAxYBEggkb3duZXJJZBIDYXNjFgESCHRvVXNlcklkEgNhc2MWARIQYWNjb3VudFJlZmVyZW5jZRIDYXNjEgZ1bmlxdWUTARYCEgRuYW1lEhBvd25lcklkX3RvVXNlcklkEgpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgh0b1VzZXJJZBIDYXNjFgISBG5hbWUSE3RvVXNlcklkXyRjcmVhdGVkQXQSCnByb3BlcnRpZXMVAhYBEgh0b1VzZXJJZBIDYXNjFgESCiRjcmVhdGVkQXQSA2FzYxYCEgRuYW1lEhMkb3duZXJJZF8kY3JlYXRlZEF0Egpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgokY3JlYXRlZEF0EgNhc2MSCnByb3BlcnRpZXMWBhIIdG9Vc2VySWQWBRIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwIgEghtYXhJdGVtcwIgEghwb3NpdGlvbgIAEhJlbmNyeXB0ZWRQdWJsaWNLZXkWBRIEdHlwZRIFYXJyYXkSCWJ5dGVBcnJheRMBEghtaW5JdGVtcwJgEghtYXhJdGVtcwJgEghwb3NpdGlvbgIBEg5zZW5kZXJLZXlJbmRleBYCEgR0eXBlEgdpbnRlZ2VyEghwb3NpdGlvbgICEhFyZWNpcGllbnRLZXlJbmRleBYCEgR0eXBlEgdpbnRlZ2VyEghwb3NpdGlvbgIDEhBhY2NvdW50UmVmZXJlbmNlFgISBHR5cGUSB2ludGVnZXISCHBvc2l0aW9uAgQSFWVuY3J5cHRlZEFjY291bnRMYWJlbBYFEgR0eXBlEgVhcnJheRIJYnl0ZUFycmF5EwESCG1pbkl0ZW1zAjASCG1heEl0ZW1zAlASCHBvc2l0aW9uAgUSCHJlcXVpcmVkFQYSCiRjcmVhdGVkQXQSCHRvVXNlcklkEhJlbmNyeXB0ZWRQdWJsaWNLZXkSDnNlbmRlcktleUluZGV4EhFyZWNpcGllbnRLZXlJbmRleBIQYWNjb3VudFJlZmVyZW5jZRIUYWRkaXRpb25hbFByb3BlcnRpZXMTAAdwcm9maWxlFgUSBHR5cGUSBm9iamVjdBIHaW5kaWNlcxUCFgMSBG5hbWUSB293bmVySWQSCnByb3BlcnRpZXMVARYBEggkb3duZXJJZBIDYXNjEgZ1bmlxdWUTARYCEgRuYW1lEhBvd25lcklkVXBkYXRlZEF0Egpwcm9wZXJ0aWVzFQIWARIIJG93bmVySWQSA2FzYxYBEgokdXBkYXRlZEF0EgNhc2MSCnByb3BlcnRpZXMWAxIJYXZhdGFyVXJsFgQSBHR5cGUSBnN0cmluZxIGZm9ybWF0EgN1cmkSCW1heExlbmd0aAL7CAASCHBvc2l0aW9uAgASDXB1YmxpY01lc3NhZ2UWAxIEdHlwZRIGc3RyaW5nEgltYXhMZW5ndGgCjBIIcG9zaXRpb24CARILZGlzcGxheU5hbWUWAxIEdHlwZRIGc3RyaW5nEgltYXhMZW5ndGgCGRIIcG9zaXRpb24CAhIIcmVxdWlyZWQVAhIKJGNyZWF0ZWRBdBIKJHVwZGF0ZWRBdBIUYWRkaXRpb25hbFByb3BlcnRpZXMTAAtjb250YWN0SW5mbwABAgECAT/wAAAAAAAAAQMBAwE/8AAAAAAAAAAA"}